{
    "package": "Spotify",
    "tagline": "Spotify API",
    "description": "Web API lets your applications fetch data from the Spotify music catalog and manage user\u2019s playlists and saved music.",
    "image": "https:\/\/logo.clearbit.com\/spotify.com",
    "repo": "https:\/\/github.com\/RapidSoftwareSolutions\/Marketplace-Spotify-Package",
    "keywords": [
        "API",
        "spotify",
        "music",
        "songs"
    ],
    "accounts": {
        "domain": "www.spotify.com\/",
        "credentials": [
            "clientId"
        ]
    },
    "steps": [
        "Browse to https:\/\/developer.spotify.com\/",
        "Register or log in",
        "Browse to dashboard to get your clientId https:\/\/beta.developer.spotify.com\/dashboard\/",
        "Profide user a link for authorization https:\/\/accounts.spotify.com\/authorize?client_id=CLIND_ID&redirect_uri=REDIRECT_URI&scope=SCOPES&response_type=token"
    ],
    "blocks": [
        {
            "name": "getSingleAlbum",
            "description": "Retrieve single album information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "albumId",
                    "type": "String",
                    "info": "Id of the album",
                    "required": true
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/albums\/{$data['albumId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAlbums",
            "description": "Retrieve several album information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "albumIds",
                    "type": "List",
                    "structure": {
                        "name": "albumId",
                        "type": "String",
                        "info": "Single albumId"
                    },
                    "info": "Id of the album",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/albums",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleAlbumTracks",
            "description": "Retrieve single album tracks information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "albumId",
                    "type": "String",
                    "info": "Id of the album",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first track to return. Default: 0 (the first object). Use with limit to get the next set of tracks. ",
                    "required": false
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/albums\/{$data['albumId']}\/tracks",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleArtist",
            "description": "Retrieve single artist information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistId",
                    "type": "String",
                    "info": "Id of the artist",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/artists\/{$data['artistId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getArtists",
            "description": "Retrieve several artists information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistIds",
                    "type": "List",
                    "structure": {
                        "name": "artistId",
                        "type": "String",
                        "info": "Single artist Id"
                    },
                    "info": "Ids of the artists",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/artists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleArtistAlbums",
            "description": "Retrieve single artist albums information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistId",
                    "type": "String",
                    "info": "Id of the artist",
                    "required": true
                },
                {
                    "name": "albumTypes",
                    "type": "List",
                    "structure": {
                        "name": "albumType",
                        "type": "Select",
                        "options": [
                            "album",
                            "single",
                            "appears_on",
                            "compilation"
                        ],
                        "info": "Type of album"
                    },
                    "info": "Types of albums",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "album_type"
                    }
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of albums to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first album to return. Default: 0 (the first object). Use with limit to get the next set of albums. ",
                    "required": false
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/artists\/{$data['artistId']}\/albums",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "album_type",
                            "limit",
                            "offset",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleArtistTopTracks",
            "description": "Retrieve single artist top tracksinformation",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistId",
                    "type": "String",
                    "info": "Id of the artis",
                    "required": true
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/artists\/{$data['artistId']}\/top-tracks",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "country"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleArtistRelatedArtists",
            "description": "Retrieve single artist related artists information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistId",
                    "type": "String",
                    "info": "Id of the artis",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/artists\/{$data['artistId']}\/related-artists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listFeaturedPlaylists",
            "description": "Get a list of Spotify featured playlists",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items.",
                    "required": false
                },
                {
                    "name": "locale",
                    "type": "String",
                    "info": "The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore. ",
                    "required": false
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                },
                {
                    "name": "timestamp",
                    "type": "DatePicker",
                    "info": "A timestamp in ISO 8601 format: yyyy-MM-ddTHH:mm:ss",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/browse\/featured-playlists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "locale",
                            "country",
                            "timestamp"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listNewReleases",
            "description": "Get a list of new album releases featured in Spotify",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items. ",
                    "required": false
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/browse\/new-releases",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "country"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listCategories",
            "description": "Get a list of categories used to tag items in Spotify",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items.",
                    "required": false
                },
                {
                    "name": "locale",
                    "type": "String",
                    "info": "The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore. ",
                    "required": false
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/browse\/categories",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "locale",
                            "country"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleCategory",
            "description": "Get a single category used to tag items in Spotify ",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "locale",
                    "type": "String",
                    "info": "The desired language, consisting of a lowercase ISO 639 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore. ",
                    "required": false
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/browse\/categories\/{$data['categoryId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "locale",
                            "country"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleCategoryPlaylists",
            "description": "Get a single category used to tag items in Spotify ",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "categoryId",
                    "type": "String",
                    "info": "Id of the category",
                    "required": true
                },
                {
                    "name": "country",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of items.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/browse\/categories\/{$data['categoryId']}\/playlists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "country",
                            "limit",
                            "offset"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getRecomendationPlaylist",
            "description": "Create a playlist-style listening experience based on seed artists, tracks and genres.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "seedArtists",
                    "type": "List",
                    "structure": {
                        "name": "seedArtist",
                        "type": "String",
                        "info": "Single seedArtist"
                    },
                    "info": "Id of the seed artists",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "seed_artists"
                    }
                },
                {
                    "name": "seedGenres",
                    "type": "List",
                    "structure": {
                        "name": "seedGenre",
                        "type": "String",
                        "info": "Single seedGenre"
                    },
                    "info": "Id of the seed artists",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "seed_genres"
                    }
                },
                {
                    "name": "seedTracks",
                    "type": "List",
                    "structure": {
                        "name": "seedTrack",
                        "type": "String",
                        "info": "Single seedTrack"
                    },
                    "info": "Id of the seed artists",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "seed_tracks"
                    }
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The target size of the list of recommended tracks.",
                    "required": false
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                },
                {
                    "name": "maxAcousticness",
                    "type": "String",
                    "info": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_acousticness"
                    }
                },
                {
                    "name": "minAcousticness",
                    "type": "String",
                    "info": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_acousticness"
                    }
                },
                {
                    "name": "targetAcousticness",
                    "type": "String",
                    "info": "A confidence measure from 0.0 to 1.0 of whether the track is acoustic.",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_acousticness"
                    }
                },
                {
                    "name": "maxDanceability",
                    "type": "String",
                    "info": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_danceability"
                    }
                },
                {
                    "name": "minDanceability",
                    "type": "String",
                    "info": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_danceability"
                    }
                },
                {
                    "name": "targetDanceability",
                    "type": "String",
                    "info": "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_danceability"
                    }
                },
                {
                    "name": "maxDurationMs",
                    "type": "Number",
                    "info": "The duration of the track in milliseconds.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_duration_ms"
                    }
                },
                {
                    "name": "minDurationMs",
                    "type": "Number",
                    "info": "The duration of the track in milliseconds.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_duration_ms"
                    }
                },
                {
                    "name": "targetDurationMs",
                    "type": "Number",
                    "info": "The duration of the track in milliseconds.",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_duration_ms"
                    }
                },
                {
                    "name": "maxEnergy",
                    "type": "String",
                    "info": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_energy"
                    }
                },
                {
                    "name": "minEnergy",
                    "type": "String",
                    "info": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_energy"
                    }
                },
                {
                    "name": "targetEnergy",
                    "type": "String",
                    "info": "Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity.",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_energy"
                    }
                },
                {
                    "name": "maxInstrumentalness",
                    "type": "String",
                    "info": "Predicts whether a track contains no vocals. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_instrumentalness"
                    }
                },
                {
                    "name": "minInstrumentalness",
                    "type": "String",
                    "info": "Predicts whether a track contains no vocals. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_instrumentalness"
                    }
                },
                {
                    "name": "targetInstrumentalness",
                    "type": "String",
                    "info": "Predicts whether a track contains no vocals. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_instrumentalness"
                    }
                },
                {
                    "name": "maxKey",
                    "type": "Number",
                    "info": "The key the track is in. Integers map to pitches using standard Pitch Class notation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_key"
                    }
                },
                {
                    "name": "minKey",
                    "type": "Number",
                    "info": "The key the track is in. Integers map to pitches using standard Pitch Class notation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_key"
                    }
                },
                {
                    "name": "targetKey",
                    "type": "Number",
                    "info": "The key the track is in. Integers map to pitches using standard Pitch Class notation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_key"
                    }
                },
                {
                    "name": "maxLiveness",
                    "type": "String",
                    "info": "Detects the presence of an audience in the recording. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_liveness"
                    }
                },
                {
                    "name": "minLiveness",
                    "type": "String",
                    "info": "Detects the presence of an audience in the recording. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_liveness"
                    }
                },
                {
                    "name": "targetLiveness",
                    "type": "String",
                    "info": "Detects the presence of an audience in the recording. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_liveness"
                    }
                },
                {
                    "name": "maxLoudness",
                    "type": "String",
                    "info": "The overall loudness of a track in decibels (dB). ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_loudness"
                    }
                },
                {
                    "name": "minLoudness",
                    "type": "String",
                    "info": "The overall loudness of a track in decibels (dB). ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_loudness"
                    }
                },
                {
                    "name": "targetLoudness",
                    "type": "String",
                    "info": "The overall loudness of a track in decibels (dB). ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_loudness"
                    }
                },
                {
                    "name": "mode",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mode"
                    }
                },
                {
                    "name": "maxPopularity",
                    "type": "Number",
                    "info": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_popularity"
                    }
                },
                {
                    "name": "minPopularity",
                    "type": "Number",
                    "info": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_popularity"
                    }
                },
                {
                    "name": "targetPopularity",
                    "type": "Number",
                    "info": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_popularity"
                    }
                },
                {
                    "name": "maxSpeechiness",
                    "type": "String",
                    "info": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_speechiness"
                    }
                },
                {
                    "name": "minSpeechiness",
                    "type": "String",
                    "info": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_speechiness"
                    }
                },
                {
                    "name": "targetSpeechiness",
                    "type": "String",
                    "info": "Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_speechiness"
                    }
                },
                {
                    "name": "maxTempo",
                    "type": "String",
                    "info": "The overall estimated tempo of a track in beats per minute (BPM).",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_tempo"
                    }
                },
                {
                    "name": "minTempo",
                    "type": "String",
                    "info": "The overall estimated tempo of a track in beats per minute (BPM).",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_tempo"
                    }
                },
                {
                    "name": "targetTempo",
                    "type": "String",
                    "info": "The overall estimated tempo of a track in beats per minute (BPM).",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_tempo"
                    }
                },
                {
                    "name": "maxTimeSignature",
                    "type": "String",
                    "info": "An estimated overall time signature of a track. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_time_signature"
                    }
                },
                {
                    "name": "minTimeSignature",
                    "type": "String",
                    "info": "An estimated overall time signature of a track. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_time_signature"
                    }
                },
                {
                    "name": "targetTimeSignature",
                    "type": "String",
                    "info": "An estimated overall time signature of a track. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_time_signature"
                    }
                },
                {
                    "name": "maxValence",
                    "type": "String",
                    "info": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_valence"
                    }
                },
                {
                    "name": "minValence",
                    "type": "String",
                    "info": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_valence"
                    }
                },
                {
                    "name": "targetValence",
                    "type": "String",
                    "info": "A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "target_valence"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/recommendations",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "seed_genres",
                            "seed_artists",
                            "max_valence",
                            "min_valence",
                            "target_valence",
                            "max_time_signature",
                            "min_time_signature",
                            "target_time_signature",
                            "max_tempo",
                            "min_tempo",
                            "target_tempo",
                            "max_speechiness",
                            "min_speechiness",
                            "target_speechiness",
                            "max_popularity",
                            "min_popularity",
                            "target_popularity",
                            "mode",
                            "target_loudness",
                            "target_liveness",
                            "target_key",
                            "target_instrumentalness",
                            "target_energy",
                            "target_duration_ms",
                            "target_danceability",
                            "target_acousticness",
                            "max_loudness",
                            "min_loudness",
                            "max_liveness",
                            "min_liveness",
                            "max_key",
                            "min_key",
                            "max_instrumentalness",
                            "min_instrumentalness",
                            "max_energy",
                            "min_energy",
                            "max_duration_ms",
                            "min_duration_ms",
                            "max_danceability",
                            "min_danceability",
                            "limit",
                            "market",
                            "max_acousticness",
                            "min_acousticness"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getFollowedArtists",
            "description": "Get the current user\u2019s followed artists",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "after",
                    "type": "String",
                    "info": "The last artist ID retrieved from the previous request.",
                    "required": false
                },
                {
                    "name": "type",
                    "type": "Select",
                    "options": [
                        "artist"
                    ],
                    "info": "The ID type: currently only artist is supported.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/following",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "type",
                            "limit",
                            "after"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "followArtists",
            "description": "Add the current user as a follower of one or more artists ",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistIds",
                    "type": "List",
                    "structure": {
                        "name": "artistId",
                        "type": "String",
                        "info": "Single artistId"
                    },
                    "info": "Id of the artist",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/following",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "type"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "followUsers",
            "description": "Add the current user as a follower of one or more Spotify users ",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userIds",
                    "type": "List",
                    "structure": {
                        "name": "userId",
                        "type": "String",
                        "info": "Single userId"
                    },
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/following",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "type"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unfollowArtists",
            "description": "Rewmove the current user as a follower of one or more artists ",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistIds",
                    "type": "List",
                    "structure": {
                        "name": "artisId",
                        "type": "String",
                        "info": "Single artistId"
                    },
                    "info": "Id of the artist",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/following",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "type"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unfollowUsers",
            "description": "Remove the current user as a follower of one or more Spotify users ",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userIds",
                    "type": "List",
                    "structure": {
                        "name": "userId",
                        "type": "String",
                        "info": "Single userId"
                    },
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/following",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "type"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkFollowingArtists",
            "description": "Check to see if the current user is following one or more artists",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "artistIds",
                    "type": "List",
                    "structure": {
                        "name": "artisId",
                        "type": "String",
                        "info": "Single artistId"
                    },
                    "info": "Id of the artist",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/following",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "type"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },

        {
            "name": "followPlaylist",
            "description": "Add the current user as a follower of a playlist.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "ownerId",
                    "type": "String",
                    "info": "The Spotify user ID of the person who owns the playlist.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "The Spotify ID of the playlist. Any playlist can be followed, regardless of its public\/private status, as long as you know its playlist ID",
                    "required": true
                },
                {
                    "name": "public",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "If true the playlist will be included in user's public playlists, if false it will remain private.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['ownerId']}\/playlists\/{$data['playlistId']}\/followers",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "public"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unfollowPlaylist",
            "description": "Remove the current user as a follower of a playlist.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "ownerId",
                    "type": "String",
                    "info": "The Spotify user ID of the person who owns the playlist.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "The Spotify ID of the playlist.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['ownerId']}\/playlists\/{$data['playlistId']}\/followers",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkUserFollowingPlaylist",
            "description": "Check to see if one or more Spotify users are following a specified playlist.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "ownerId",
                    "type": "String",
                    "info": "The Spotify user ID of the person who owns the playlist.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "The Spotify ID of the playlist.",
                    "required": true
                },
                {
                    "name": "userIds",
                    "type": "List",
                    "structure": {
                        "name": "userId",
                        "type": "String",
                        "info": "Single userId"
                    },
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['ownerId']}\/playlists\/{$data['playlistId']}\/followers\/contains",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "saveTracks",
            "description": "Save one or more tracks to the current user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackIds",
                    "type": "List",
                    "structure": {
                        "name": "trackId",
                        "type": "String",
                        "info": "Single trackId"
                    },
                    "info": "Id of the track",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/tracks",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSavedTracks",
            "description": "Get tracks from the current user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first track to return. Default: 0 (the first object). Use with limit to get the next set of tracks. ",
                    "required": false
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/tracks",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeSavedTracks",
            "description": "Remove one or more tracks from the current user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackIds",
                    "type": "List",
                    "structure": {
                        "name": "trackId",
                        "type": "String",
                        "info": "Single trackId"
                    },
                    "info": "Id of the track",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/tracks",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkSavedTracks",
            "description": "Check if one or more tracks is already saved in the current Spotify user\u2019s \u201cYour Music\u201d library",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackIds",
                    "type": "List",
                    "structure": {
                        "name": "trackId",
                        "type": "String",
                        "info": "Single trackId"
                    },
                    "info": "Id of the track",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/tracks\/contains",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "saveAlbums",
            "description": "Save one or more albums to the current user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "albumIds",
                    "type": "List",
                    "structure": {
                        "name": "albumId",
                        "type": "String",
                        "info": "Single albumId"
                    },
                    "info": "Id of the album",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/albums",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSavedAlbums",
            "description": "Get albums from the current user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of albums to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first album to return. Default: 0 (the first object). Use with limit to get the next set of albums.",
                    "required": false
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/albums",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteSavedAlbums",
            "description": "Delete one or more albums from the current user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "albumIds",
                    "type": "List",
                    "structure": {
                        "name": "albumId",
                        "type": "String",
                        "info": "Single albumId"
                    },
                    "info": "Id of the album",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/albums",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkSavedAlbums",
            "description": "Check if one or more albums is already saved in the current Spotify user\u2019s \u201cYour Music\u201d library.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "albumIds",
                    "type": "List",
                    "structure": {
                        "name": "albumId",
                        "type": "String",
                        "info": "Single albumId"
                    },
                    "info": "Id of the album",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/albums\/contains",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMyTopTracks",
            "description": "Get the current user\u2019s top tracks based on calculated affinity.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first track to return. Default: 0 (the first object). Use with limit to get the next set of tracks.",
                    "required": false
                },
                {
                    "name": "timeRange",
                    "type": "Select",
                    "options": [
                        "long_term",
                        "medium_term",
                        "short_term"
                    ],
                    "info": "Over what time frame the affinities are computed. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_range"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/top\/tracks",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "time_range"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMyTopArtists",
            "description": "Get the current user\u2019s top artists based on calculated affinity.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of artists to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first artist to return. Default: 0 (the first object). Use with limit to get the next set of artists.",
                    "required": false
                },
                {
                    "name": "timeRange",
                    "type": "Select",
                    "options": [
                        "long_term",
                        "medium_term",
                        "short_term"
                    ],
                    "info": "Over what time frame the affinities are computed. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "time_range"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/top\/artists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset",
                            "time_range"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getRecentlyPlayedTracks",
            "description": "Get tracks from the current user\u2019s recently played tracks.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "after",
                    "type": "DatePicker",
                    "info": "Returns all items after (but not including) this cursor position. ",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "before",
                    "type": "DatePicker",
                    "info": "Returns all items before (but not including) this cursor position. ",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{unixtime}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/recently-played",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "after",
                            "before"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAvailableDevices",
            "description": "Get information about a user\u2019s available devices.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/devices",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCurrentPlayback",
            "description": "Get information about the user\u2019s current playback state, including track, track progress, and active device.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCurrentlyPlaying",
            "description": "Get the object currently being played on the user\u2019s Spotify account.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/currently-playing",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "transferPlayback",
            "description": "Transfer playback to a new device and determine if it should start playing.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "deviceIds",
                    "type": "List",
                    "structure": {
                        "name": "deviceId",
                        "type": "String",
                        "info": "Single deviceId"
                    },
                    "info": "Id of the devices",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "device_ids"
                    }
                },
                {
                    "name": "play",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Ensure playback happens or not on new device.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "device_ids",
                            "play"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "startPlayback",
            "description": "Start a new context or resume current playback on the user\u2019s active device.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                },
                {
                    "name": "uris",
                    "type": "List",
                    "structure": {
                        "name": "uri",
                        "type": "String",
                        "info": "Single uri"
                    },
                    "info": "uris",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "uris"
                    }
                },
                {
                    "name": "contextUri",
                    "type": "String",
                    "info": "Spotify URI of the context to play. Valid contexts are albums, artists & playlists.",
                    "required": false,
                    "vendorSchema": {
                        "name": "context_uri"
                    }
                },
                {
                    "name": "offset",
                    "type": "String",
                    "info": "Indicates from where in the context playback should start",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/play",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "uris",
                            "context_uri",
                            "offset"
                        ]
                    },
                    {
                        "type": "query",
                        "parameters": [
                            "device_id"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "pausePlayback",
            "description": "Pause a new context or resume current playback on the user\u2019s active device.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/pause",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "skipPlayback",
            "description": "Skips to next track in the user\u2019s queue.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/next",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "previousPlayback",
            "description": "Skips to previous track in the user\u2019s queue.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/previous",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "seekPosition",
            "description": "Seeks to the given position in the user\u2019s currently playing track.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "positionMs",
                    "type": "Number",
                    "info": "The position in milliseconds to seek to. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "position_ms"
                    }
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/seek",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id",
                            "position_ms"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "repeatPlayback",
            "description": "Set the repeat mode for the user\u2019s playback. Options are repeat-track, repeat-context, and off.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "Select",
                    "options": [
                        "track",
                        "context",
                        "off"
                    ],
                    "info": "track will repeat the current track. context will repeat the current context. off will turn repeat off.",
                    "required": true
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/repeat",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id",
                            "state"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setVolume",
            "description": "Set the volume for the user\u2019s current playback device.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "volumePercent",
                    "type": "Number",
                    "info": "The volume to set. Must be a value from 0 to 100 inclusive.",
                    "required": true,
                    "vendorSchema": {
                        "name": "volume_percent"
                    }
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/volume",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id",
                            "volume_percent"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "shufflePlayback",
            "description": "Toggle shuffle on or off for user\u2019s playback.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "state",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "true: Shuffle user's playback false: Do not shuffle user's playback",
                    "required": true
                },
                {
                    "name": "deviceId",
                    "type": "String",
                    "info": "The id of the device this command is targeting. If not supplied, the user's currently active device is the target.",
                    "required": false,
                    "vendorSchema": {
                        "name": "device_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/player\/shuffle",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "device_id",
                            "state"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPlaylists",
            "description": "Get a list of the playlists owned or followed by a Spotify user.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object).",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMyPlaylists",
            "description": "Get a list of the playlists owned or followed by current Spotify user.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object).",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me\/playlists",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "limit",
                            "offset"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserSinglePlaylist",
            "description": "Get a playlist owned by a Spotify user.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "fields",
                    "type": "List",
                    "structure": {
                        "name": "field",
                        "type": "String",
                        "info": "Single field"
                    },
                    "info": "Filters for the query:",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "fields",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserSinglePlaylistTracks",
            "description": "Get full details of the tracks of a playlist owned by a Spotify user.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "fields",
                    "type": "List",
                    "structure": {
                        "name": "field",
                        "type": "String",
                        "info": "Single field"
                    },
                    "info": "Filters for the query:",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object).",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}\/tracks",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "fields",
                            "market",
                            "limit",
                            "offset"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createPlaylist",
            "description": "Create new playlist",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "Name of the playlist",
                    "required": true
                },
                {
                    "name": "public",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "If true the playlist will be included in user's public playlists, if false it will remain private.",
                    "required": false
                },
                {
                    "name": "collaborative",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "If true the playlist will be collaborative. ",
                    "required": false
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "Description of the playlist",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "name",
                            "public",
                            "collaborative",
                            "description"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addTracksToPlaylist",
            "description": "Add one or more tracks to a user\u2019s playlist.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "uris",
                    "type": "List",
                    "structure": {
                        "name": "uri",
                        "type": "String",
                        "info": "Single uri"
                    },
                    "info": "A list of Spotify track URIs to add.",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "position",
                    "type": "Number",
                    "info": "The position to insert the tracks, a zero-based index",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}\/tracks",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "uris",
                            "position"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeTracksFromPlaylist",
            "description": "Remove one or more tracks from a user\u2019s playlist.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "tracks",
                    "type": "List",
                    "structure": {
                        "name": "track",
                        "type": "String",
                        "info": "Single track"
                    },
                    "info": "A list of Spotify track URIs to remove.",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}\/tracks",
                "method": "delete",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "tracks"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "reorderPlaylistTracks",
            "description": "Reorder a track or a group of tracks in a playlist.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "rangeStart",
                    "type": "Number",
                    "info": "The position of the first track to be reordered.",
                    "required": true,
                    "vendorSchema": {
                        "name": "range_start"
                    }
                },
                {
                    "name": "rangeLength",
                    "type": "Number",
                    "info": "The amount of tracks to be reordered. Defaults to 1 if not set.",
                    "required": false,
                    "vendorSchema": {
                        "name": "range_length"
                    }
                },
                {
                    "name": "insertBefore",
                    "type": "Number",
                    "info": "The position where the tracks should be inserted. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "insert_before"
                    }
                },
                {
                    "name": "snapshotId",
                    "type": "String",
                    "info": "The playlist's snapshot ID against which you want to make the changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "snapshot_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}\/tracks",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "range_start",
                            "range_length",
                            "insert_before",
                            "snapshot_id"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "replaceTracksInPlaylist",
            "description": "Replace all the tracks in a playlist, overwriting its existing tracks.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "uris",
                    "type": "List",
                    "structure": {
                        "name": "uri",
                        "type": "String",
                        "info": "Single uri"
                    },
                    "info": "A list of Spotify track URIs to add.",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}\/tracks",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "uris"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updatePlaylist",
            "description": "Replace all the tracks in a playlist, overwriting its existing tracks.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                },
                {
                    "name": "playlistId",
                    "type": "String",
                    "info": "Id of the playlist",
                    "required": true
                },
                {
                    "name": "name",
                    "type": "String",
                    "info": "Name of the playlist",
                    "required": false
                },
                {
                    "name": "public",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "If true the playlist will be included in user's public playlists, if false it will remain private.",
                    "required": false
                },
                {
                    "name": "collaborative",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "If true the playlist will be collaborative. ",
                    "required": false
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "Description of the playlist",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}\/playlists\/{$data['playlistId']}",
                "method": "put",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "name",
                            "public",
                            "collaborative",
                            "desciption"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserProfile",
            "description": "Get public profile information about a Spotify user.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user's Spotify user ID.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/users\/{$data['userId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMyProfile",
            "description": "Get public profile information about current Spotify user.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/me",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "search",
            "description": "Get Spotify catalog information about artists, albums, tracks or playlists that match a keyword string.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "q",
                    "type": "String",
                    "info": "The search query's keywords (and optional field filters and operators)",
                    "required": true
                },
                {
                    "name": "type",
                    "type": "List",
                    "structure": {
                        "name": "type",
                        "options": [
                            "album",
                            "artist",
                            "playlist",
                            "tracks"
                        ],
                        "info": "Single type"
                    },
                    "info": "A list of item types to search across. ",
                    "required": false,
                    "vendorSchema": {
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                },
                {
                    "name": "limit",
                    "type": "Number",
                    "info": "The maximum number of item to return. Default: 20. Minimum: 1. Maximum: 50. ",
                    "required": false
                },
                {
                    "name": "offset",
                    "type": "Number",
                    "info": "The index of the first item to return. Default: 0 (the first object). Use with limit to get the next set of itemss. ",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/search",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "q",
                            "type",
                            "market",
                            "limit",
                            "offset"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleTrack",
            "description": "Retrieve single track information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackId",
                    "type": "String",
                    "info": "Id of the track",
                    "required": true
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/tracks\/{$data['trackId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTracks",
            "description": "Retrieve several tracks information",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackIds",
                    "type": "List",
                    "structure": {
                        "name": "trackId",
                        "type": "String",
                        "info": "Single trackId"
                    },
                    "info": "Id of the tracks",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                },
                {
                    "name": "market",
                    "type": "String",
                    "info": "An ISO 3166-1 alpha-2 country code.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/albums",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids",
                            "market"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleTrackAudioAnalysis",
            "description": "Get a detailed audio analysis for a single track identified by its unique Spotify ID",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackId",
                    "type": "String",
                    "info": "Id of the track",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/audio-analysis\/{$data['trackId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSingleTrackAudioFeatures",
            "description": "Get audio feature information for a single track identified by its unique Spotify ID.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackId",
                    "type": "String",
                    "info": "Id of the track",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/audio-features\/{$data['trackId']}",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": []
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTracksAudioFeatures",
            "description": "Get audio feature information for several tracks identified by its unique Spotify ID.",
            "args": [
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from user",
                    "required": true
                },
                {
                    "name": "trackIds",
                    "type": "List",
                    "structure": {
                        "name": "trackId",
                        "type": "String",
                        "info": "Single trackId"
                    },
                    "info": "Id of the tracks",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{,}",
                        "name": "ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.spotify.com\/v1\/audio-features\/",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ids"
                        ]
                    }
                ],
                "headers": {
                    "Authorization": "Bearer {$data['accessToken']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        }
    ]
}